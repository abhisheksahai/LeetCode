Complexities Practise

1.
int a = 0, b = 0;
for (i = 0; i < N; i++) {
    a = a + rand();
}
for (j=0; j<M; j++) {
    b = b + rand();
}
Time Complexity = O(N) + O(M) = O(N)


2.
int a = 0;
for (i = 0; i < N; i++) {
    for (j = N; j > i; j--) {
            a = a + i + j;
    }
}
Time Complexity = O(N)*O(N) = O(N^2)


3.
int i, j, k = 0;
for (i = n / 2; i <= n; i++) {
        for (j = 2; j <= n; j = j * 2) {
            k = k + n / 2;
    }
}
Time Complexity =  O(n/2) * O(log n) = O(n logn) Base for log is 2


4.
int a = 0, i = N;
while (i > 0) {
    a += i;
    i /= 2;
}
Time Complexity = O(log N) Base for log is 2


5.
for(var i=0;i<n;i++)
        i*=k	
Time Complexity = O(log N) Base for log is i


6.
var value = 0;
for(var i=0;i<n;i++)
    for(var j=0;j<i;j++)
        value += 1;	
Time Complexity = O(n)*O(n) = O(n^2)